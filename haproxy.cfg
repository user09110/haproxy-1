global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
#       ca-base /root/cert/
#       crt-base /root/cert/

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

        # set maximum connection
        maxconn 2048
        tune.ssl.default-dh-param 2048

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
	balance roundrobin

        # add http-forward-for
        option forwardfor
        # maintaining keep-alive
        option http-server-close
        option redispatch
        option httpclose
        option forwardfor header X-Client
        option forwardfor
        option httpchk
        cookie SERVERID insert indirect nocache

        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

#################################
### User List
#################################

userlist auth_list
        group microservices users docker,user
        user docker insecure-password pocker
        user user insecure-password user


##################################
### FRONTEND-HTTP
##################################

frontend www-http
        bind :80
 	acl nexus hdr(host) -i 12-nexus.lab.int
 	acl nexus hdr_end(host) -i 12-a.lab.int

        redirect scheme https if { hdr(Host) -i lab.int } !{ ssl_fc }
        redirect scheme https if { hdr_end(Host) -i lab.int } !{ ssl_fc }

        reqadd X-Forwarded-Proto:\ http
 	use_backend nexus_backend if nexus
	use_backend registry_backend
# 	default_backend www-backend

###################################
### FRONTEND-HTTPS
###################################

frontend www-https
        bind :443 ssl crt /etc/haproxy/12-a.pem
        reqadd X-Forwarded-Proto:\ https

 	acl registry hdr(host) -i 12-a.lab.int
        acl nexus hdr(host) -i 12-nexus.lab.int


        # Registry Auth
 	acl auth_registry http_auth_group(auth_list) microservices
 	use_backend registry_backend_auth if !auth_registry { ssl_fc } registry

        use_backend nexus_backend if nexus
 	default_backend registry_backend

# 	default_backend www-backend

##################################
### BACKEND
##################################

backend registry_backend
 	option httpchk HEAD /v2 HTTP/1.0
 	balance roundrobin
 	server docker-registry 10.0.0.181:5000 check

backend registry_backend_auth
	errorfile 503 /etc/haproxy/registry_auth.http

backend nexus_backend
        option httpchk HEAD / HTTP/1.0
        server nexus-repository 10.0.0.181:5001

# backend www-all-servers
# 	server jenkins 10.0.0.181:8080 cookie www-lab.int



# backend www-backend
# 	mode http
# 	balance roundrobin
# 	redirect scheme https if !{ ssl_fc }
#       http-request replace-value Host (.*):80 \1:8080
#       http-request replace-value Host (.*):80 \1:443

# 	server jenkins 10.0.0.181:8080
#       server www-2 www_2_private_IP:80 check



#################################
### STATS
#################################

listen stats :1936
        stats enable
 	stats scope www-http
        stats scope www-https
        stats scope registry_backend
        stats scope registry_backend_auth
        stats scope nexus_backend
        stats scope www-all-servers
# 	stats scope www-backend
#       stats scope wordpress-backend
        stats uri /
        stats realm Haproxy\ Statistics
        stats auth user:password

        stats show-legends
        stats show-desc registry
        stats show-node
        stats admin if TRUE


